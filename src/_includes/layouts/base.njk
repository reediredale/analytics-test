<!doctype html>
<html lang="en">
  <head>
    <title>{{ title }}</title>
     <link rel="stylesheet" type="text/css" href="/assets/main.css" />
     <!-- Google Tag Manager -->
    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-PSWDBMF');</script>
    <!-- End Google Tag Manager -->
  </head>
  <body>
    {% include "../components/navigation.njk" %}
    <main class="p-12">
      <h1 class="text-3xl mb-8">{{title}}</h1>
      {{ content | safe }}
    </main>
    <script src="/assets/main.js"></script>
    <script>
selectItemDatalayer(selectType: string, identifier: string, idx: number, product: any, profileName: string, profileId: string, variant = 'profile table') {
    if (variant === 'profile table' && product.isPromoted && product.rank) {
      variant = 'sponsored product listing - expanded';
    }
    if (variant === 'profile table' && product.brokerForm) {
      variant = 'partner';
    }
    if (window.location.href && window.location.href.includes('/wiselist')) {
      variant = 'wiselist profile table';
    }
    let category2 = '';
    if (product.purposes) {
      category2 = product.purposes.toString()
    }
    if (product.type) {
      category2 = product.type.toString()
    }
    const category = product.groupCategory.includes(' ') ? this.titleCase(product.groupCategory) : product.groupCategory;

    const productObj = {
      event: 'select_item',
      ecommerce: {
        items: [{
          item_name: product.name,
          item_id: identifier,
          item_brand: product.companyName,
          item_category: category,
          item_category_2: category2 || product.groupCategory.toLowerCase(),
          item_category_3: selectType,
          item_category_4: product.isCommercial ? 'Monetised' : 'Unmonetised',
          item_variant: variant,
          item_list_name: profileName,
          item_list_id: profileId,
          index: idx + 1,
          quantity: null,
          price: null
        }]
      }
    };

    if ((window as any).dataLayer) {
      (window as any).dataLayer.push(productObj);
    } else {
      console.table(productObj.ecommerce.items[0]);
    }
  }
  </script>

  <script>

  pushEngagement(formCategory: string, formAction: string, formLabel: string, name: string, id: string,
      productVertical: string, interaction = 'click', product = null) {

    const engagementObj = {
      event: 'engagement',
      category: `engagement - ${formCategory}`,
      action: formAction,
      label: formLabel,
      'component Name': name,
      'component ID': id,
      'interaction type': interaction,
      vertical: productVertical
    };

    if (formCategory === 'lead referral' && product) {
      engagementObj['item_id'] = product.id || '';
      engagementObj['item_brand'] = product.companyName || '';
      engagementObj['item_name'] = product.name || '';
    }

    if ((window as any).dataLayer) {
      (window as any).dataLayer.push(engagementObj);
    } else {
      console.table(engagementObj);
    }
  }
  </script>

  </body>
</html>
